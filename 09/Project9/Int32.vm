function Int32.new 4
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 0
pop local 3
push constant 32
call Array.new 1
pop this 0
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push constant 32
lt
not
if-goto WHILE_END0
push local 2
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 3
push argument 0
push constant 1
neg
call Math.multiply 2
pop argument 0
label IF_FALSE0
label WHILE_EXP1
push argument 0
push constant 0
eq
not
not
if-goto WHILE_END1
push constant 1
pop local 1
push constant 0
pop local 2
label WHILE_EXP2
push argument 0
push local 1
push constant 2
call Math.multiply 2
call Math.divide 2
push constant 0
eq
not
not
if-goto WHILE_END2
push local 1
push constant 2
call Math.multiply 2
pop local 1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
push local 2
push this 0
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push local 1
sub
pop argument 0
goto WHILE_EXP1
label WHILE_END1
push local 3
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Int32.invert 1
pop temp 0
push pointer 0
push constant 1
call Int32.plusThisInt 2
pop temp 0
label IF_FALSE1
push pointer 0
return
function Int32.bitNew 1
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 32
call Array.new 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 32
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push local 0
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Int32.copyNew 2
push constant 1
call Memory.alloc 1
pop pointer 0
push argument 0
call Int32.getBits 1
pop local 0
push constant 32
call Array.new 1
pop this 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 32
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
push local 1
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Int32.getBits 0
push argument 0
pop pointer 0
push this 0
return
function Int32.negative 0
push argument 0
pop pointer 0
push constant 31
push this 0
add
pop pointer 1
push that 0
push constant 0
not
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Int32.zero 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 32
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
not
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Int32.gte 1
push argument 0
pop pointer 0
push argument 1
call Int32.negate 1
pop local 0
push pointer 0
push local 0
call Int32.plus 2
pop local 0
push local 0
call Int32.negative 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
not
return
function Int32.eq 2
push argument 0
pop pointer 0
push argument 1
call Int32.getBits 1
pop local 0
label WHILE_EXP0
push local 1
push constant 32
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
push local 1
push local 0
add
pop pointer 1
push that 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Int32.negate 1
push argument 0
pop pointer 0
push this 0
call Int32.bitNew 1
pop local 0
push local 0
call Int32.invert 1
pop temp 0
push local 0
push constant 1
call Int32.plusThisInt 2
pop temp 0
push local 0
return
function Int32.and 4
push argument 0
pop pointer 0
push constant 32
call Array.new 1
pop local 1
push argument 1
call Int32.getBits 1
pop local 2
label WHILE_EXP0
push local 3
push constant 32
lt
not
if-goto WHILE_END0
push local 3
push this 0
add
pop pointer 1
push that 0
push constant 0
not
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push local 2
add
pop pointer 1
push that 0
push constant 0
not
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 3
push local 1
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END1
label IF_FALSE1
push local 3
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END1
goto IF_END0
label IF_FALSE0
push local 3
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push local 1
call Int32.bitNew 1
pop local 0
push local 1
call Array.dispose 1
pop temp 0
push local 0
return
function Int32.plus 6
push argument 0
pop pointer 0
push constant 32
call Array.new 1
pop local 1
push constant 0
pop local 3
label WHILE_EXP0
push local 4
push constant 32
lt
not
if-goto WHILE_END0
push local 4
push this 0
add
pop pointer 1
push that 0
pop local 5
push argument 1
call Int32.getBits 1
pop local 2
push local 5
push local 4
push local 2
add
pop pointer 1
push that 0
add
pop local 5
push local 5
push local 3
add
pop local 5
push local 5
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 3
label IF_FALSE0
push local 5
push constant 1
neg
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 4
push local 1
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 3
label IF_FALSE1
push local 5
push constant 2
neg
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 4
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop local 3
label IF_FALSE2
push local 5
push constant 3
neg
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 4
push local 1
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop local 3
label IF_FALSE3
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 1
call Int32.bitNew 1
pop local 0
push local 1
call Array.dispose 1
pop temp 0
push local 0
return
function Int32.div 5
push argument 0
pop pointer 0
push this 0
call Int32.bitNew 1
pop local 0
push argument 1
call Int32.getBits 1
call Int32.bitNew 1
pop local 1
push pointer 0
call Int32.negative 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Int32.negative 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 4
goto IF_END1
label IF_FALSE1
push constant 0
not
pop local 4
push local 1
call Int32.invert 1
pop temp 0
push local 1
push constant 1
call Int32.plusThisInt 2
pop temp 0
label IF_END1
push local 0
call Int32.invert 1
pop temp 0
push local 0
push constant 1
call Int32.plusThisInt 2
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 1
call Int32.negative 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 4
goto IF_END2
label IF_FALSE2
push constant 0
pop local 4
push local 1
call Int32.invert 1
pop temp 0
push local 1
push constant 1
call Int32.plusThisInt 2
pop temp 0
label IF_END2
label IF_END0
push constant 0
call Int32.new 1
pop local 2
push local 0
push local 1
call Int32.plus 2
pop local 3
label WHILE_EXP0
push local 3
call Int32.negative 1
not
not
if-goto WHILE_END0
push local 0
push local 1
call Int32.plusThis 2
pop temp 0
push local 2
push constant 1
call Int32.plusThisInt 2
pop temp 0
push local 3
call Int32.dispose 1
pop temp 0
push local 0
push local 1
call Int32.plus 2
pop local 3
goto WHILE_EXP0
label WHILE_END0
push local 4
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
call Int32.invert 1
pop temp 0
push local 2
push constant 1
call Int32.plusThisInt 2
pop temp 0
label IF_FALSE3
push local 0
call Int32.dispose 1
pop temp 0
push local 1
call Int32.dispose 1
pop temp 0
push local 3
call Int32.dispose 1
pop temp 0
push local 2
return
function Int32.mod 5
push argument 0
pop pointer 0
push this 0
call Int32.bitNew 1
pop local 0
push argument 1
call Int32.getBits 1
call Int32.bitNew 1
pop local 1
push pointer 0
call Int32.negative 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Int32.negative 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 4
goto IF_END1
label IF_FALSE1
push constant 0
not
pop local 4
push local 1
call Int32.invert 1
pop temp 0
push local 1
push constant 1
call Int32.plusThisInt 2
pop temp 0
label IF_END1
push local 0
call Int32.invert 1
pop temp 0
push local 0
push constant 1
call Int32.plusThisInt 2
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 1
call Int32.negative 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 4
goto IF_END2
label IF_FALSE2
push constant 0
pop local 4
push local 1
call Int32.invert 1
pop temp 0
push local 1
push constant 1
call Int32.plusThisInt 2
pop temp 0
label IF_END2
label IF_END0
push constant 0
call Int32.new 1
pop local 2
push local 0
push local 1
call Int32.plus 2
pop local 3
label WHILE_EXP0
push local 3
call Int32.negative 1
not
not
if-goto WHILE_END0
push local 0
push local 1
call Int32.plusThis 2
pop temp 0
push local 2
push constant 1
call Int32.plusThisInt 2
pop temp 0
push local 3
call Int32.dispose 1
pop temp 0
push local 0
push local 1
call Int32.plus 2
pop local 3
goto WHILE_EXP0
label WHILE_END0
push local 4
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
call Int32.invert 1
pop temp 0
push local 0
push constant 1
call Int32.plusThisInt 2
pop temp 0
label IF_FALSE3
push local 1
call Int32.dispose 1
pop temp 0
push local 3
call Int32.dispose 1
pop temp 0
push local 2
call Int32.dispose 1
pop temp 0
push local 0
return
function Int32.mul 4
push argument 0
pop pointer 0
push pointer 0
call Int32.printBits 1
pop temp 0
push argument 1
call Int32.printBits 1
pop temp 0
push constant 0
call Int32.new 1
pop local 2
push this 0
call Int32.bitNew 1
pop local 0
push argument 1
call Int32.getBits 1
call Int32.bitNew 1
pop local 1
push pointer 0
call Int32.zero 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1248
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 2
return
label IF_FALSE0
push argument 1
call Int32.zero 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
return
label IF_FALSE1
push pointer 0
call Int32.negative 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
call Int32.negative 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
pop local 3
push local 1
call Int32.invert 1
pop temp 0
push local 1
push constant 1
call Int32.plusThisInt 2
pop temp 0
goto IF_END3
label IF_FALSE3
push constant 0
not
pop local 3
label IF_END3
push local 0
call Int32.invert 1
pop temp 0
push local 0
push constant 1
call Int32.plusThisInt 2
pop temp 0
goto IF_END2
label IF_FALSE2
push argument 1
call Int32.negative 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
pop local 3
push local 1
call Int32.invert 1
pop temp 0
push local 1
push constant 1
call Int32.plusThisInt 2
pop temp 0
goto IF_END4
label IF_FALSE4
push constant 0
pop local 3
label IF_END4
label IF_END2
push local 1
push constant 1
neg
call Int32.plusThisInt 2
pop temp 0
label WHILE_EXP0
push local 1
call Int32.negative 1
not
not
if-goto WHILE_END0
push local 2
push local 0
call Int32.plusThis 2
pop temp 0
push local 1
push constant 1
neg
call Int32.plusThisInt 2
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 1288
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 3
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 2
call Int32.invert 1
pop temp 0
push local 2
push constant 1
call Int32.plusThisInt 2
pop temp 0
label IF_FALSE5
push local 2
return
function Int32.plusThis 6
push argument 0
pop pointer 0
push constant 0
pop local 3
push this 0
pop local 1
push argument 1
call Int32.getBits 1
pop local 2
label WHILE_EXP0
push local 4
push constant 32
lt
not
if-goto WHILE_END0
push local 4
push local 1
add
pop pointer 1
push that 0
pop local 5
push local 4
push local 1
add
pop pointer 1
push that 0
push local 4
push local 2
add
pop pointer 1
push that 0
add
pop local 5
push local 5
push local 3
add
pop local 5
push local 5
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 3
label IF_FALSE0
push local 5
push constant 1
neg
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 4
push this 0
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 3
label IF_FALSE1
push local 5
push constant 2
neg
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 4
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop local 3
label IF_FALSE2
push local 5
push constant 3
neg
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 4
push this 0
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop local 3
label IF_FALSE3
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Int32.plusInt 1
push argument 0
pop pointer 0
push argument 1
call Int32.new 1
pop local 0
push pointer 0
push local 0
call Int32.plus 2
pop local 0
push local 0
return
function Int32.plusThisInt 1
push argument 0
pop pointer 0
push argument 1
call Int32.new 1
pop local 0
push pointer 0
push local 0
call Int32.plusThis 2
pop temp 0
push local 0
call Int32.dispose 1
pop temp 0
push constant 0
return
function Int32.mulInt 1
push argument 0
pop pointer 0
push argument 1
call Int32.new 1
pop local 0
push pointer 0
push local 0
call Int32.mul 2
return
function Int32.invert 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 32
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push local 0
push this 0
add
pop pointer 1
push that 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Int32.asr 3
push argument 0
pop pointer 0
push pointer 0
call Int32.negative 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
call Int32.new 1
pop local 0
goto IF_END0
label IF_FALSE0
push constant 0
call Int32.new 1
pop local 0
label IF_END0
push local 0
call Int32.getBits 1
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push argument 1
push constant 32
lt
not
if-goto WHILE_END0
push local 2
push local 1
add
push argument 1
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
pop local 2
push argument 1
push constant 1
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push local 1
call Int32.bitNew 1
pop local 0
push local 0
return
function Int32.toInt 7
push argument 0
pop pointer 0
push constant 0
pop local 2
push this 0
call Int32.bitNew 1
pop local 5
push constant 0
pop local 4
push constant 31
push this 0
add
pop pointer 1
push that 0
push constant 0
not
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 5
call Int32.invert 1
pop temp 0
push local 5
push constant 1
call Int32.plusThisInt 2
pop temp 0
push constant 0
not
pop local 4
label IF_FALSE0
push local 5
call Int32.getBits 1
pop local 6
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 32
lt
not
if-goto WHILE_END0
push local 0
push local 6
add
pop pointer 1
push that 0
push constant 1
neg
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 1
push constant 1
pop local 3
label WHILE_EXP1
push local 1
push local 0
lt
not
if-goto WHILE_END1
push local 3
push constant 2
call Math.multiply 2
pop local 3
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 2
push local 3
add
pop local 2
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 4
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
push constant 1
neg
call Math.multiply 2
pop local 2
label IF_FALSE2
push local 2
return
function Int32.printBits 1
push argument 0
pop pointer 0
push constant 31
pop local 0
label WHILE_EXP0
push local 0
push constant 1
neg
gt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 1
neg
call Math.multiply 2
call Output.printInt 1
pop temp 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
call Output.println 0
pop temp 0
push constant 0
return
function Int32.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
