function Main.main 17
push constant 17
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 512
push constant 2
call Math.divide 2
pop local 0
push constant 256
push constant 2
call Math.divide 2
pop local 1
push constant 25
pop local 2
push constant 10
pop local 3
push constant 175
push constant 10000
call Fraction32.new 2
pop local 11
push constant 21
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
push constant 1
call Fraction32.new 2
pop local 12
push constant 120
push constant 1
call Fraction32.new 2
pop local 13
push constant 240
push constant 1
call Fraction32.new 2
pop local 14
push constant 7
push constant 40
call Fraction32.new 2
pop local 15
push local 13
push local 14
call Fraction32.mul 2
pop local 13
push constant 27
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 15
call Fraction32.sinOfThis 1
pop local 15
push constant 32
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push local 12
push local 3
call Fraction32.plusInt 2
pop local 12
push local 13
push local 3
call Fraction32.plusInt 2
pop local 13
push local 14
push local 3
call Fraction32.plusInt 2
pop local 14
push local 12
call Fraction32.floor 1
push constant 360
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 12
push constant 360
neg
call Fraction32.plusInt 2
pop local 12
label IF_FALSE0
push local 13
call Fraction32.floor 1
push constant 360
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 13
push constant 360
neg
call Fraction32.plusInt 2
pop local 13
label IF_FALSE1
push local 14
call Fraction32.floor 1
push constant 360
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 14
push constant 360
neg
call Fraction32.plusInt 2
pop local 14
label IF_FALSE2
push constant 50
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 12
push local 11
call Fraction32.mul 2
pop local 16
push local 16
call Fraction32.reduce 1
pop temp 0
push local 16
call Fraction32.sinOfThis 1
pop local 16
push local 16
push local 2
call Fraction32.mulInt 2
pop local 16
push local 16
call Fraction32.floor16 1
pop local 10
push local 10
push local 0
add
pop local 4
push constant 62
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 12
push local 11
call Fraction32.mul 2
pop local 16
push local 16
call Fraction32.reduce 1
pop temp 0
push local 16
call Fraction32.cosOfThis 1
pop local 16
push local 16
push local 2
call Fraction32.mulInt 2
pop local 16
push local 16
call Fraction32.floor16 1
pop local 10
push local 10
push local 1
add
pop local 7
push local 13
push local 11
call Fraction32.mul 2
pop local 16
push local 16
call Fraction32.reduce 1
pop temp 0
push local 16
call Fraction32.sinOfThis 1
pop local 16
push local 16
push local 2
call Fraction32.mulInt 2
pop local 16
push local 16
call Fraction32.floor16 1
pop local 10
push local 10
push local 0
add
pop local 5
push local 13
push local 11
call Fraction32.mul 2
pop local 16
push local 16
call Fraction32.reduce 1
pop temp 0
push local 16
call Fraction32.cosOfThis 1
pop local 16
push local 16
push local 2
call Fraction32.mulInt 2
pop local 16
push local 16
call Fraction32.floor16 1
pop local 10
push local 10
push local 1
add
pop local 8
push local 14
push local 11
call Fraction32.mul 2
pop local 16
push local 16
call Fraction32.reduce 1
pop temp 0
push local 16
call Fraction32.sinOfThis 1
pop local 16
push local 16
push local 2
call Fraction32.mulInt 2
pop local 16
push local 16
call Fraction32.floor16 1
pop local 10
push local 10
push local 0
add
pop local 6
push local 14
push local 11
call Fraction32.mul 2
pop local 16
push local 16
call Fraction32.reduce 1
pop temp 0
push local 16
call Fraction32.cosOfThis 1
pop local 16
push local 16
push local 2
call Fraction32.mulInt 2
pop local 16
push local 16
call Fraction32.floor16 1
pop local 10
push local 10
push local 1
add
pop local 9
push local 4
push local 7
push local 5
push local 8
call Screen.drawLine 4
pop temp 0
push local 5
push local 8
push local 6
push local 9
call Screen.drawLine 4
pop temp 0
push local 6
push local 9
push local 4
push local 7
call Screen.drawLine 4
pop temp 0
push constant 500
call Sys.wait 1
pop temp 0
push constant 0
return
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
