// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/09/Fraction/Main.jack

// Computes the sum of 2/3 and 1/5.
      // var Fraction a, b, c;        
      // let a = Fraction.new(2,3);  
      // let b = Fraction.new(1,5);  
      // let c = a.mult(b);  // Computes c = a * b
      // do c.print();       // Prints "2/15"
class Main {
   function void main() {
  		var int centerX, centerY, radius, deltaTheta, x1, x2, x3, y1, y2, y3, interInt;
  		var Fraction radConst, ang1, ang2, ang3, sinTest, intermediate;
  		var Int32 test1, test2;
  		let centerX = 512 / 2;
  		let centerY = 256 / 2;
  		let radius = 25;
  		let deltaTheta = 10; //Change in angle per frame in degrees
		let radConst = Fraction.new(175,10000);
		let ang1 = Fraction.new(0,1);
		let ang2 = Fraction.new(120,1);
		let ang3 = Fraction.new(240,1);
		let sinTest = Fraction.new(7,40);
		let sinTest = sinTest.sinOfThis();
		//do sinTest.print();
		let test1 = Int32.new(-27);
		do test1.printBits();
		let test2 = Int32.new(-19);
		do test2.printBits();
		let test2 = test2.plus(test1);
		do test2.printBits();
		do Output.printInt(test2.toInt());
		do Output.println();
		do test2.printBits();


		while(true){
			let ang1 = ang1.plusInt(deltaTheta);
			let ang2 = ang2.plusInt(deltaTheta);
			let ang3 = ang3.plusInt(deltaTheta);


			if(ang1.floor() > 360){
				let ang1 = ang1.plusInt(-360);
			}
			if(ang2.floor() > 360){
				let ang2 = ang2.plusInt(-360);
			}
			if(ang3.floor() > 360){
				let ang3 = ang3.plusInt(-360);
			}

			let intermediate = ang1.mult(radConst);
			//do intermediate.print();
			do intermediate.reduce();
			let intermediate = intermediate.sinOfThis();
			//do intermediate.print();
			let intermediate = intermediate.multInt(radius);
			let interInt = intermediate.floor();
			let x1 = interInt + centerX;

			let intermediate = ang1.mult(radConst);
			do intermediate.reduce();
			let intermediate = intermediate.cosOfThis();
			let intermediate = intermediate.multInt(radius);
			let interInt = intermediate.floor();
			let y1 = interInt + centerY;


			let intermediate = ang2.mult(radConst);
			do intermediate.reduce();
			let intermediate = intermediate.sinOfThis();
			let intermediate = intermediate.multInt(radius);
			let interInt = intermediate.floor();
			let x2 = interInt + centerX;

			let intermediate = ang2.mult(radConst);
			do intermediate.reduce();
			let intermediate = intermediate.cosOfThis();
			let intermediate = intermediate.multInt(radius);
			let interInt = intermediate.floor();
			let y2 = interInt + centerY;


			let intermediate = ang3.mult(radConst);
			do intermediate.reduce();
			let intermediate = intermediate.sinOfThis();
			let intermediate = intermediate.multInt(radius);
			let interInt = intermediate.floor();
			let x3 = interInt + centerX;

			let intermediate = ang3.mult(radConst);
			do intermediate.reduce();
			let intermediate = intermediate.cosOfThis();
			let intermediate = intermediate.multInt(radius);
			let interInt = intermediate.floor();
			let y3 = interInt + centerY;

			do Screen.drawLine(x1, y1, x2, y2);
			do Screen.drawLine(x2, y2, x3, y3);
			do Screen.drawLine(x3, y3, x1, y1);
			do Sys.wait(500);
			//do Screen.clearScreen();
			return;
		}

		return;
   }
}
